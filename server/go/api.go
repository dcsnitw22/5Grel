/*
 * Nudm_SDM
 *
 * Nudm Subscriber Data Management Service.   Â© 2023, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved.
 *
 * API version: 2.3.0-alpha.5
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"context"
	"net/http"
)

// A2XSubscriptionDataRetrievalAPIRouter defines the required methods for binding the api requests to a responses for the A2XSubscriptionDataRetrievalAPI
// The A2XSubscriptionDataRetrievalAPIRouter implementation should parse necessary information from the http request,
// pass the data to a A2XSubscriptionDataRetrievalAPIServicer to perform the required actions, then write the service results to the http response.
type A2XSubscriptionDataRetrievalAPIRouter interface {
	GetA2xData(http.ResponseWriter, *http.Request)
}

// AccessAndMobilitySubscriptionDataRetrievalAPIRouter defines the required methods for binding the api requests to a responses for the AccessAndMobilitySubscriptionDataRetrievalAPI
// The AccessAndMobilitySubscriptionDataRetrievalAPIRouter implementation should parse necessary information from the http request,
// pass the data to a AccessAndMobilitySubscriptionDataRetrievalAPIServicer to perform the required actions, then write the service results to the http response.
type AccessAndMobilitySubscriptionDataRetrievalAPIRouter interface {
	GetAmData(http.ResponseWriter, *http.Request)
}

// Class5MBSSubscriptionDataRetrievalAPIRouter defines the required methods for binding the api requests to a responses for the Class5MBSSubscriptionDataRetrievalAPI
// The Class5MBSSubscriptionDataRetrievalAPIRouter implementation should parse necessary information from the http request,
// pass the data to a Class5MBSSubscriptionDataRetrievalAPIServicer to perform the required actions, then write the service results to the http response.
type Class5MBSSubscriptionDataRetrievalAPIRouter interface {
	GetMbsData(http.ResponseWriter, *http.Request)
}

// EnhancedCoverageRestrictionDataRetrievalAPIRouter defines the required methods for binding the api requests to a responses for the EnhancedCoverageRestrictionDataRetrievalAPI
// The EnhancedCoverageRestrictionDataRetrievalAPIRouter implementation should parse necessary information from the http request,
// pass the data to a EnhancedCoverageRestrictionDataRetrievalAPIServicer to perform the required actions, then write the service results to the http response.
type EnhancedCoverageRestrictionDataRetrievalAPIRouter interface {
	GetEcrData(http.ResponseWriter, *http.Request)
}

// GPSIToSUPITranslationOrSUPIToGPSITranslationAPIRouter defines the required methods for binding the api requests to a responses for the GPSIToSUPITranslationOrSUPIToGPSITranslationAPI
// The GPSIToSUPITranslationOrSUPIToGPSITranslationAPIRouter implementation should parse necessary information from the http request,
// pass the data to a GPSIToSUPITranslationOrSUPIToGPSITranslationAPIServicer to perform the required actions, then write the service results to the http response.
type GPSIToSUPITranslationOrSUPIToGPSITranslationAPIRouter interface {
	GetSupiOrGpsi(http.ResponseWriter, *http.Request)
}

// GroupIdentifiersAPIRouter defines the required methods for binding the api requests to a responses for the GroupIdentifiersAPI
// The GroupIdentifiersAPIRouter implementation should parse necessary information from the http request,
// pass the data to a GroupIdentifiersAPIServicer to perform the required actions, then write the service results to the http response.
type GroupIdentifiersAPIRouter interface {
	GetGroupIdentifiers(http.ResponseWriter, *http.Request)
}

// LCSBroadcastAssistanceDataTypesRetrievalAPIRouter defines the required methods for binding the api requests to a responses for the LCSBroadcastAssistanceDataTypesRetrievalAPI
// The LCSBroadcastAssistanceDataTypesRetrievalAPIRouter implementation should parse necessary information from the http request,
// pass the data to a LCSBroadcastAssistanceDataTypesRetrievalAPIServicer to perform the required actions, then write the service results to the http response.
type LCSBroadcastAssistanceDataTypesRetrievalAPIRouter interface {
	GetLcsBcaData(http.ResponseWriter, *http.Request)
}

// LCSMobileOriginatedDataRetrievalAPIRouter defines the required methods for binding the api requests to a responses for the LCSMobileOriginatedDataRetrievalAPI
// The LCSMobileOriginatedDataRetrievalAPIRouter implementation should parse necessary information from the http request,
// pass the data to a LCSMobileOriginatedDataRetrievalAPIServicer to perform the required actions, then write the service results to the http response.
type LCSMobileOriginatedDataRetrievalAPIRouter interface {
	GetLcsMoData(http.ResponseWriter, *http.Request)
}

// LCSPrivacyDataRetrievalAPIRouter defines the required methods for binding the api requests to a responses for the LCSPrivacyDataRetrievalAPI
// The LCSPrivacyDataRetrievalAPIRouter implementation should parse necessary information from the http request,
// pass the data to a LCSPrivacyDataRetrievalAPIServicer to perform the required actions, then write the service results to the http response.
type LCSPrivacyDataRetrievalAPIRouter interface {
	GetLcsPrivacyData(http.ResponseWriter, *http.Request)
}

// LCSSubscriptionDataRetrievalAPIRouter defines the required methods for binding the api requests to a responses for the LCSSubscriptionDataRetrievalAPI
// The LCSSubscriptionDataRetrievalAPIRouter implementation should parse necessary information from the http request,
// pass the data to a LCSSubscriptionDataRetrievalAPIServicer to perform the required actions, then write the service results to the http response.
type LCSSubscriptionDataRetrievalAPIRouter interface {
	GetLcsSubscriptionData(http.ResponseWriter, *http.Request)
}

// MultipleIdentifiersAPIRouter defines the required methods for binding the api requests to a responses for the MultipleIdentifiersAPI
// The MultipleIdentifiersAPIRouter implementation should parse necessary information from the http request,
// pass the data to a MultipleIdentifiersAPIServicer to perform the required actions, then write the service results to the http response.
type MultipleIdentifiersAPIRouter interface {
	GetMultipleIdentifiers(http.ResponseWriter, *http.Request)
}

// ProseSubscriptionDataRetrievalAPIRouter defines the required methods for binding the api requests to a responses for the ProseSubscriptionDataRetrievalAPI
// The ProseSubscriptionDataRetrievalAPIRouter implementation should parse necessary information from the http request,
// pass the data to a ProseSubscriptionDataRetrievalAPIServicer to perform the required actions, then write the service results to the http response.
type ProseSubscriptionDataRetrievalAPIRouter interface {
	GetProseData(http.ResponseWriter, *http.Request)
}

// ProvidingAcknowledgementOfCAGUpdateAPIRouter defines the required methods for binding the api requests to a responses for the ProvidingAcknowledgementOfCAGUpdateAPI
// The ProvidingAcknowledgementOfCAGUpdateAPIRouter implementation should parse necessary information from the http request,
// pass the data to a ProvidingAcknowledgementOfCAGUpdateAPIServicer to perform the required actions, then write the service results to the http response.
type ProvidingAcknowledgementOfCAGUpdateAPIRouter interface {
	CAGAck(http.ResponseWriter, *http.Request)
}

// ProvidingAcknowledgementOfSNSSAIsUpdateAPIRouter defines the required methods for binding the api requests to a responses for the ProvidingAcknowledgementOfSNSSAIsUpdateAPI
// The ProvidingAcknowledgementOfSNSSAIsUpdateAPIRouter implementation should parse necessary information from the http request,
// pass the data to a ProvidingAcknowledgementOfSNSSAIsUpdateAPIServicer to perform the required actions, then write the service results to the http response.
type ProvidingAcknowledgementOfSNSSAIsUpdateAPIRouter interface {
	SNSSAIsAck(http.ResponseWriter, *http.Request)
}

// ProvidingAcknowledgementOfSteeringOfRoamingAPIRouter defines the required methods for binding the api requests to a responses for the ProvidingAcknowledgementOfSteeringOfRoamingAPI
// The ProvidingAcknowledgementOfSteeringOfRoamingAPIRouter implementation should parse necessary information from the http request,
// pass the data to a ProvidingAcknowledgementOfSteeringOfRoamingAPIServicer to perform the required actions, then write the service results to the http response.
type ProvidingAcknowledgementOfSteeringOfRoamingAPIRouter interface {
	SorAckInfo(http.ResponseWriter, *http.Request)
}

// ProvidingAcknowledgementOfUEParametersUpdateAPIRouter defines the required methods for binding the api requests to a responses for the ProvidingAcknowledgementOfUEParametersUpdateAPI
// The ProvidingAcknowledgementOfUEParametersUpdateAPIRouter implementation should parse necessary information from the http request,
// pass the data to a ProvidingAcknowledgementOfUEParametersUpdateAPIServicer to perform the required actions, then write the service results to the http response.
type ProvidingAcknowledgementOfUEParametersUpdateAPIRouter interface {
	UpuAck(http.ResponseWriter, *http.Request)
}

// RangingAndSidelinkPositioningSubscriptionDataRetrievalAPIRouter defines the required methods for binding the api requests to a responses for the RangingAndSidelinkPositioningSubscriptionDataRetrievalAPI
// The RangingAndSidelinkPositioningSubscriptionDataRetrievalAPIRouter implementation should parse necessary information from the http request,
// pass the data to a RangingAndSidelinkPositioningSubscriptionDataRetrievalAPIServicer to perform the required actions, then write the service results to the http response.
type RangingAndSidelinkPositioningSubscriptionDataRetrievalAPIRouter interface {
	GetRangingSlPosData(http.ResponseWriter, *http.Request)
}

// RetrievalOfMultipleDataSetsAPIRouter defines the required methods for binding the api requests to a responses for the RetrievalOfMultipleDataSetsAPI
// The RetrievalOfMultipleDataSetsAPIRouter implementation should parse necessary information from the http request,
// pass the data to a RetrievalOfMultipleDataSetsAPIServicer to perform the required actions, then write the service results to the http response.
type RetrievalOfMultipleDataSetsAPIRouter interface {
	GetDataSets(http.ResponseWriter, *http.Request)
}

// RetrievalOfSharedDataAPIRouter defines the required methods for binding the api requests to a responses for the RetrievalOfSharedDataAPI
// The RetrievalOfSharedDataAPIRouter implementation should parse necessary information from the http request,
// pass the data to a RetrievalOfSharedDataAPIServicer to perform the required actions, then write the service results to the http response.
type RetrievalOfSharedDataAPIRouter interface {
	GetSharedData(http.ResponseWriter, *http.Request)
}

// RetrievalOfTheIndividualSharedDataAPIRouter defines the required methods for binding the api requests to a responses for the RetrievalOfTheIndividualSharedDataAPI
// The RetrievalOfTheIndividualSharedDataAPIRouter implementation should parse necessary information from the http request,
// pass the data to a RetrievalOfTheIndividualSharedDataAPIServicer to perform the required actions, then write the service results to the http response.
type RetrievalOfTheIndividualSharedDataAPIRouter interface {
	GetIndividualSharedData(http.ResponseWriter, *http.Request)
}

// SMFSelectionSubscriptionDataRetrievalAPIRouter defines the required methods for binding the api requests to a responses for the SMFSelectionSubscriptionDataRetrievalAPI
// The SMFSelectionSubscriptionDataRetrievalAPIRouter implementation should parse necessary information from the http request,
// pass the data to a SMFSelectionSubscriptionDataRetrievalAPIServicer to perform the required actions, then write the service results to the http response.
type SMFSelectionSubscriptionDataRetrievalAPIRouter interface {
	GetSmfSelData(http.ResponseWriter, *http.Request)
}

// SMSManagementSubscriptionDataRetrievalAPIRouter defines the required methods for binding the api requests to a responses for the SMSManagementSubscriptionDataRetrievalAPI
// The SMSManagementSubscriptionDataRetrievalAPIRouter implementation should parse necessary information from the http request,
// pass the data to a SMSManagementSubscriptionDataRetrievalAPIServicer to perform the required actions, then write the service results to the http response.
type SMSManagementSubscriptionDataRetrievalAPIRouter interface {
	GetSmsMngtData(http.ResponseWriter, *http.Request)
}

// SMSSubscriptionDataRetrievalAPIRouter defines the required methods for binding the api requests to a responses for the SMSSubscriptionDataRetrievalAPI
// The SMSSubscriptionDataRetrievalAPIRouter implementation should parse necessary information from the http request,
// pass the data to a SMSSubscriptionDataRetrievalAPIServicer to perform the required actions, then write the service results to the http response.
type SMSSubscriptionDataRetrievalAPIRouter interface {
	GetSmsData(http.ResponseWriter, *http.Request)
}

// SessionManagementSubscriptionDataRetrievalAPIRouter defines the required methods for binding the api requests to a responses for the SessionManagementSubscriptionDataRetrievalAPI
// The SessionManagementSubscriptionDataRetrievalAPIRouter implementation should parse necessary information from the http request,
// pass the data to a SessionManagementSubscriptionDataRetrievalAPIServicer to perform the required actions, then write the service results to the http response.
type SessionManagementSubscriptionDataRetrievalAPIRouter interface {
	GetSmData(http.ResponseWriter, *http.Request)
}

// SliceSelectionSubscriptionDataRetrievalAPIRouter defines the required methods for binding the api requests to a responses for the SliceSelectionSubscriptionDataRetrievalAPI
// The SliceSelectionSubscriptionDataRetrievalAPIRouter implementation should parse necessary information from the http request,
// pass the data to a SliceSelectionSubscriptionDataRetrievalAPIServicer to perform the required actions, then write the service results to the http response.
type SliceSelectionSubscriptionDataRetrievalAPIRouter interface {
	GetNSSAI(http.ResponseWriter, *http.Request)
}

// SubscriptionCreationAPIRouter defines the required methods for binding the api requests to a responses for the SubscriptionCreationAPI
// The SubscriptionCreationAPIRouter implementation should parse necessary information from the http request,
// pass the data to a SubscriptionCreationAPIServicer to perform the required actions, then write the service results to the http response.
type SubscriptionCreationAPIRouter interface {
	Subscribe(http.ResponseWriter, *http.Request)
}

// SubscriptionCreationForSharedDataAPIRouter defines the required methods for binding the api requests to a responses for the SubscriptionCreationForSharedDataAPI
// The SubscriptionCreationForSharedDataAPIRouter implementation should parse necessary information from the http request,
// pass the data to a SubscriptionCreationForSharedDataAPIServicer to perform the required actions, then write the service results to the http response.
type SubscriptionCreationForSharedDataAPIRouter interface {
	SubscribeToSharedData(http.ResponseWriter, *http.Request)
}

// SubscriptionDeletionAPIRouter defines the required methods for binding the api requests to a responses for the SubscriptionDeletionAPI
// The SubscriptionDeletionAPIRouter implementation should parse necessary information from the http request,
// pass the data to a SubscriptionDeletionAPIServicer to perform the required actions, then write the service results to the http response.
type SubscriptionDeletionAPIRouter interface {
	Unsubscribe(http.ResponseWriter, *http.Request)
}

// SubscriptionDeletionForSharedDataAPIRouter defines the required methods for binding the api requests to a responses for the SubscriptionDeletionForSharedDataAPI
// The SubscriptionDeletionForSharedDataAPIRouter implementation should parse necessary information from the http request,
// pass the data to a SubscriptionDeletionForSharedDataAPIServicer to perform the required actions, then write the service results to the http response.
type SubscriptionDeletionForSharedDataAPIRouter interface {
	UnsubscribeForSharedData(http.ResponseWriter, *http.Request)
}

// SubscriptionModificationAPIRouter defines the required methods for binding the api requests to a responses for the SubscriptionModificationAPI
// The SubscriptionModificationAPIRouter implementation should parse necessary information from the http request,
// pass the data to a SubscriptionModificationAPIServicer to perform the required actions, then write the service results to the http response.
type SubscriptionModificationAPIRouter interface {
	Modify(http.ResponseWriter, *http.Request)
	ModifySharedDataSubs(http.ResponseWriter, *http.Request)
}

// TimeSyncSubscriptionDataRetrievalAPIRouter defines the required methods for binding the api requests to a responses for the TimeSyncSubscriptionDataRetrievalAPI
// The TimeSyncSubscriptionDataRetrievalAPIRouter implementation should parse necessary information from the http request,
// pass the data to a TimeSyncSubscriptionDataRetrievalAPIServicer to perform the required actions, then write the service results to the http response.
type TimeSyncSubscriptionDataRetrievalAPIRouter interface {
	GetTimeSyncSubscriptionData(http.ResponseWriter, *http.Request)
}

// TraceConfigurationDataRetrievalAPIRouter defines the required methods for binding the api requests to a responses for the TraceConfigurationDataRetrievalAPI
// The TraceConfigurationDataRetrievalAPIRouter implementation should parse necessary information from the http request,
// pass the data to a TraceConfigurationDataRetrievalAPIServicer to perform the required actions, then write the service results to the http response.
type TraceConfigurationDataRetrievalAPIRouter interface {
	GetTraceConfigData(http.ResponseWriter, *http.Request)
}

// TriggerSORInfoUpdateAPIRouter defines the required methods for binding the api requests to a responses for the TriggerSORInfoUpdateAPI
// The TriggerSORInfoUpdateAPIRouter implementation should parse necessary information from the http request,
// pass the data to a TriggerSORInfoUpdateAPIServicer to perform the required actions, then write the service results to the http response.
type TriggerSORInfoUpdateAPIRouter interface {
	UpdateSORInfo(http.ResponseWriter, *http.Request)
}

// UEContextInAMFDataRetrievalAPIRouter defines the required methods for binding the api requests to a responses for the UEContextInAMFDataRetrievalAPI
// The UEContextInAMFDataRetrievalAPIRouter implementation should parse necessary information from the http request,
// pass the data to a UEContextInAMFDataRetrievalAPIServicer to perform the required actions, then write the service results to the http response.
type UEContextInAMFDataRetrievalAPIRouter interface {
	GetUeCtxInAmfData(http.ResponseWriter, *http.Request)
}

// UEContextInSMFDataRetrievalAPIRouter defines the required methods for binding the api requests to a responses for the UEContextInSMFDataRetrievalAPI
// The UEContextInSMFDataRetrievalAPIRouter implementation should parse necessary information from the http request,
// pass the data to a UEContextInSMFDataRetrievalAPIServicer to perform the required actions, then write the service results to the http response.
type UEContextInSMFDataRetrievalAPIRouter interface {
	GetUeCtxInSmfData(http.ResponseWriter, *http.Request)
}

// UEContextInSMSFDataRetrievalAPIRouter defines the required methods for binding the api requests to a responses for the UEContextInSMSFDataRetrievalAPI
// The UEContextInSMSFDataRetrievalAPIRouter implementation should parse necessary information from the http request,
// pass the data to a UEContextInSMSFDataRetrievalAPIServicer to perform the required actions, then write the service results to the http response.
type UEContextInSMSFDataRetrievalAPIRouter interface {
	GetUeCtxInSmsfData(http.ResponseWriter, *http.Request)
}

// UserConsentSubscriptionDataRetrievalAPIRouter defines the required methods for binding the api requests to a responses for the UserConsentSubscriptionDataRetrievalAPI
// The UserConsentSubscriptionDataRetrievalAPIRouter implementation should parse necessary information from the http request,
// pass the data to a UserConsentSubscriptionDataRetrievalAPIServicer to perform the required actions, then write the service results to the http response.
type UserConsentSubscriptionDataRetrievalAPIRouter interface {
	GetUcData(http.ResponseWriter, *http.Request)
}

// V2XSubscriptionDataRetrievalAPIRouter defines the required methods for binding the api requests to a responses for the V2XSubscriptionDataRetrievalAPI
// The V2XSubscriptionDataRetrievalAPIRouter implementation should parse necessary information from the http request,
// pass the data to a V2XSubscriptionDataRetrievalAPIServicer to perform the required actions, then write the service results to the http response.
type V2XSubscriptionDataRetrievalAPIRouter interface {
	GetV2xData(http.ResponseWriter, *http.Request)
}

// A2XSubscriptionDataRetrievalAPIServicer defines the api actions for the A2XSubscriptionDataRetrievalAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type A2XSubscriptionDataRetrievalAPIServicer interface {
	GetA2xData(context.Context, string, string, string, string) (ImplResponse, error)
}

// AccessAndMobilitySubscriptionDataRetrievalAPIServicer defines the api actions for the AccessAndMobilitySubscriptionDataRetrievalAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type AccessAndMobilitySubscriptionDataRetrievalAPIServicer interface {
	GetAmData(context.Context, string, string, PlmnIdNid, []PlmnId, bool, []string, string, string) (ImplResponse, error)
}

// Class5MBSSubscriptionDataRetrievalAPIServicer defines the api actions for the Class5MBSSubscriptionDataRetrievalAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type Class5MBSSubscriptionDataRetrievalAPIServicer interface {
	GetMbsData(context.Context, string, string, string, string) (ImplResponse, error)
}

// EnhancedCoverageRestrictionDataRetrievalAPIServicer defines the api actions for the EnhancedCoverageRestrictionDataRetrievalAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type EnhancedCoverageRestrictionDataRetrievalAPIServicer interface {
	GetEcrData(context.Context, string, string, string, string) (ImplResponse, error)
}

// GPSIToSUPITranslationOrSUPIToGPSITranslationAPIServicer defines the api actions for the GPSIToSUPITranslationOrSUPIToGPSITranslationAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type GPSIToSUPITranslationOrSUPIToGPSITranslationAPIServicer interface {
	GetSupiOrGpsi(context.Context, string, string, string, AppPortId, string, string, GpsiType, string, string) (ImplResponse, error)
}

// GroupIdentifiersAPIServicer defines the api actions for the GroupIdentifiersAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type GroupIdentifiersAPIServicer interface {
	GetGroupIdentifiers(context.Context, string, string, bool, string, string, string, string) (ImplResponse, error)
}

// LCSBroadcastAssistanceDataTypesRetrievalAPIServicer defines the api actions for the LCSBroadcastAssistanceDataTypesRetrievalAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type LCSBroadcastAssistanceDataTypesRetrievalAPIServicer interface {
	GetLcsBcaData(context.Context, string, string, PlmnId, string, string) (ImplResponse, error)
}

// LCSMobileOriginatedDataRetrievalAPIServicer defines the api actions for the LCSMobileOriginatedDataRetrievalAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type LCSMobileOriginatedDataRetrievalAPIServicer interface {
	GetLcsMoData(context.Context, string, string, string, string) (ImplResponse, error)
}

// LCSPrivacyDataRetrievalAPIServicer defines the api actions for the LCSPrivacyDataRetrievalAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type LCSPrivacyDataRetrievalAPIServicer interface {
	GetLcsPrivacyData(context.Context, string, string, string, string) (ImplResponse, error)
}

// LCSSubscriptionDataRetrievalAPIServicer defines the api actions for the LCSSubscriptionDataRetrievalAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type LCSSubscriptionDataRetrievalAPIServicer interface {
	GetLcsSubscriptionData(context.Context, string, string, string, string) (ImplResponse, error)
}

// MultipleIdentifiersAPIServicer defines the api actions for the MultipleIdentifiersAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type MultipleIdentifiersAPIServicer interface {
	GetMultipleIdentifiers(context.Context, []string, string) (ImplResponse, error)
}

// ProseSubscriptionDataRetrievalAPIServicer defines the api actions for the ProseSubscriptionDataRetrievalAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type ProseSubscriptionDataRetrievalAPIServicer interface {
	GetProseData(context.Context, string, string, string, string) (ImplResponse, error)
}

// ProvidingAcknowledgementOfCAGUpdateAPIServicer defines the api actions for the ProvidingAcknowledgementOfCAGUpdateAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type ProvidingAcknowledgementOfCAGUpdateAPIServicer interface {
	CAGAck(context.Context, string, AcknowledgeInfo) (ImplResponse, error)
}

// ProvidingAcknowledgementOfSNSSAIsUpdateAPIServicer defines the api actions for the ProvidingAcknowledgementOfSNSSAIsUpdateAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type ProvidingAcknowledgementOfSNSSAIsUpdateAPIServicer interface {
	SNSSAIsAck(context.Context, string, AcknowledgeInfo) (ImplResponse, error)
}

// ProvidingAcknowledgementOfSteeringOfRoamingAPIServicer defines the api actions for the ProvidingAcknowledgementOfSteeringOfRoamingAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type ProvidingAcknowledgementOfSteeringOfRoamingAPIServicer interface {
	SorAckInfo(context.Context, string, AcknowledgeInfo) (ImplResponse, error)
}

// ProvidingAcknowledgementOfUEParametersUpdateAPIServicer defines the api actions for the ProvidingAcknowledgementOfUEParametersUpdateAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type ProvidingAcknowledgementOfUEParametersUpdateAPIServicer interface {
	UpuAck(context.Context, string, AcknowledgeInfo) (ImplResponse, error)
}

// RangingAndSidelinkPositioningSubscriptionDataRetrievalAPIServicer defines the api actions for the RangingAndSidelinkPositioningSubscriptionDataRetrievalAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type RangingAndSidelinkPositioningSubscriptionDataRetrievalAPIServicer interface {
	GetRangingSlPosData(context.Context, string, string, string, string) (ImplResponse, error)
}

// RetrievalOfMultipleDataSetsAPIServicer defines the api actions for the RetrievalOfMultipleDataSetsAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type RetrievalOfMultipleDataSetsAPIServicer interface {
	GetDataSets(context.Context, string, []DataSetName, PlmnIdNid, []PlmnId, Snssai, string, UcPurpose, bool, string, string, string) (ImplResponse, error)
}

// RetrievalOfSharedDataAPIServicer defines the api actions for the RetrievalOfSharedDataAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type RetrievalOfSharedDataAPIServicer interface {
	GetSharedData(context.Context, []string, string, string, string, string) (ImplResponse, error)
}

// RetrievalOfTheIndividualSharedDataAPIServicer defines the api actions for the RetrievalOfTheIndividualSharedDataAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type RetrievalOfTheIndividualSharedDataAPIServicer interface {
	GetIndividualSharedData(context.Context, []string, string, string, string) (ImplResponse, error)
}

// SMFSelectionSubscriptionDataRetrievalAPIServicer defines the api actions for the SMFSelectionSubscriptionDataRetrievalAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type SMFSelectionSubscriptionDataRetrievalAPIServicer interface {
	GetSmfSelData(context.Context, string, string, PlmnId, bool, string, string) (ImplResponse, error)
}

// SMSManagementSubscriptionDataRetrievalAPIServicer defines the api actions for the SMSManagementSubscriptionDataRetrievalAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type SMSManagementSubscriptionDataRetrievalAPIServicer interface {
	GetSmsMngtData(context.Context, string, string, PlmnId, string, string) (ImplResponse, error)
}

// SMSSubscriptionDataRetrievalAPIServicer defines the api actions for the SMSSubscriptionDataRetrievalAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type SMSSubscriptionDataRetrievalAPIServicer interface {
	GetSmsData(context.Context, string, string, PlmnId, string, string) (ImplResponse, error)
}

// SessionManagementSubscriptionDataRetrievalAPIServicer defines the api actions for the SessionManagementSubscriptionDataRetrievalAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type SessionManagementSubscriptionDataRetrievalAPIServicer interface {
	GetSmData(context.Context, string, string, Snssai, string, PlmnId, bool, string, string) (ImplResponse, error)
}

// SliceSelectionSubscriptionDataRetrievalAPIServicer defines the api actions for the SliceSelectionSubscriptionDataRetrievalAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type SliceSelectionSubscriptionDataRetrievalAPIServicer interface {
	GetNSSAI(context.Context, string, string, PlmnId, bool, string, string) (ImplResponse, error)
}

// SubscriptionCreationAPIServicer defines the api actions for the SubscriptionCreationAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type SubscriptionCreationAPIServicer interface {
	Subscribe(context.Context, string, SdmSubscription, []string) (ImplResponse, error)
}

// SubscriptionCreationForSharedDataAPIServicer defines the api actions for the SubscriptionCreationForSharedDataAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type SubscriptionCreationForSharedDataAPIServicer interface {
	SubscribeToSharedData(context.Context, SdmSubscription) (ImplResponse, error)
}

// SubscriptionDeletionAPIServicer defines the api actions for the SubscriptionDeletionAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type SubscriptionDeletionAPIServicer interface {
	Unsubscribe(context.Context, string, string) (ImplResponse, error)
}

// SubscriptionDeletionForSharedDataAPIServicer defines the api actions for the SubscriptionDeletionForSharedDataAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type SubscriptionDeletionForSharedDataAPIServicer interface {
	UnsubscribeForSharedData(context.Context, string) (ImplResponse, error)
}

// SubscriptionModificationAPIServicer defines the api actions for the SubscriptionModificationAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type SubscriptionModificationAPIServicer interface {
	Modify(context.Context, string, string, SdmSubsModification, string) (ImplResponse, error)
	ModifySharedDataSubs(context.Context, string, SdmSubsModification, string) (ImplResponse, error)
}

// TimeSyncSubscriptionDataRetrievalAPIServicer defines the api actions for the TimeSyncSubscriptionDataRetrievalAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type TimeSyncSubscriptionDataRetrievalAPIServicer interface {
	GetTimeSyncSubscriptionData(context.Context, string, string, string) (ImplResponse, error)
}

// TraceConfigurationDataRetrievalAPIServicer defines the api actions for the TraceConfigurationDataRetrievalAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type TraceConfigurationDataRetrievalAPIServicer interface {
	GetTraceConfigData(context.Context, string, string, PlmnId, string, string) (ImplResponse, error)
}

// TriggerSORInfoUpdateAPIServicer defines the api actions for the TriggerSORInfoUpdateAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type TriggerSORInfoUpdateAPIServicer interface {
	UpdateSORInfo(context.Context, string, SorUpdateInfo) (ImplResponse, error)
}

// UEContextInAMFDataRetrievalAPIServicer defines the api actions for the UEContextInAMFDataRetrievalAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type UEContextInAMFDataRetrievalAPIServicer interface {
	GetUeCtxInAmfData(context.Context, string, string) (ImplResponse, error)
}

// UEContextInSMFDataRetrievalAPIServicer defines the api actions for the UEContextInSMFDataRetrievalAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type UEContextInSMFDataRetrievalAPIServicer interface {
	GetUeCtxInSmfData(context.Context, string, string) (ImplResponse, error)
}

// UEContextInSMSFDataRetrievalAPIServicer defines the api actions for the UEContextInSMSFDataRetrievalAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type UEContextInSMSFDataRetrievalAPIServicer interface {
	GetUeCtxInSmsfData(context.Context, string, string) (ImplResponse, error)
}

// UserConsentSubscriptionDataRetrievalAPIServicer defines the api actions for the UserConsentSubscriptionDataRetrievalAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type UserConsentSubscriptionDataRetrievalAPIServicer interface {
	GetUcData(context.Context, string, string, UcPurpose, string, string) (ImplResponse, error)
}

// V2XSubscriptionDataRetrievalAPIServicer defines the api actions for the V2XSubscriptionDataRetrievalAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type V2XSubscriptionDataRetrievalAPIServicer interface {
	GetV2xData(context.Context, string, string, string, string) (ImplResponse, error)
}
