/*
 * Nudm_SDM
 *
 * Nudm Subscriber Data Management Service.   Â© 2023, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved.
 *
 * API version: 2.3.0-alpha.5
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"context"
	"net/http"
	"time"
)

// SubscriptionCreationAPIService is a service that implements the logic for the SubscriptionCreationAPIServicer
// This service should implement the business logic for every endpoint for the SubscriptionCreationAPI API.
// Include any external packages or services that will be required by this service.
type SubscriptionCreationAPIService struct {
}

// NewSubscriptionCreationAPIService creates a default api service
func NewSubscriptionCreationAPIService() SubscriptionCreationAPIServicer {
	return &SubscriptionCreationAPIService{}
}

// Subscribe - subscribe to notifications
func (s *SubscriptionCreationAPIService) Subscribe(ctx context.Context, ueId string, sdmSubscription SdmSubscription, sharedDataIds []string) (ImplResponse, error) {

	if ueId == "" {
		return Response(http.StatusBadRequest, ProblemDetails{
			Title:  "Bad Request",
			Detail: "UE ID is required",
		}), nil
	}

	// Check if the callback URI is valid
	if sdmSubscription.CallbackReference == "" {
		return Response(http.StatusBadRequest, ProblemDetails{
			Title:  "Bad Request",
			Detail: "Callback URI is required",
		}), nil
	}

	// Check if the monitored resource URI is valid
	if len(sdmSubscription.MonitoredResourceUris) == 0 {
		return Response(http.StatusBadRequest, ProblemDetails{
			Title:  "Bad Request",
			Detail: "Monitored Resource URIs are required",
		}), nil
	}

	createdSubscription := SdmSubscription{
		SubscriptionId:        "dummy-subscription-id",
		NfInstanceId:          "dummy-nf-instance-id",
		ImplicitUnsubscribe:   false,
		Expires:               time.Now().Add(24 * time.Hour),
		CallbackReference:     sdmSubscription.CallbackReference,
		AmfServiceName:        sdmSubscription.AmfServiceName,
		MonitoredResourceUris: sdmSubscription.MonitoredResourceUris,
		SingleNssai: Snssai{
			Sst: sdmSubscription.SingleNssai.Sst,
			Sd:  sdmSubscription.SingleNssai.Sd,
		},
		Dnn:                        sdmSubscription.Dnn,
		PlmnId:                     sdmSubscription.PlmnId,
		ImmediateReport:            sdmSubscription.ImmediateReport,
		Report:                     sdmSubscription.Report,
		SupportedFeatures:          sdmSubscription.SupportedFeatures,
		ContextInfo:                sdmSubscription.ContextInfo,
		NfChangeFilter:             sdmSubscription.NfChangeFilter,
		UniqueSubscription:         sdmSubscription.UniqueSubscription,
		ResetIds:                   sdmSubscription.ResetIds,
		UeConSmfDataSubFilter:      sdmSubscription.UeConSmfDataSubFilter,
		DataRestorationCallbackUri: sdmSubscription.DataRestorationCallbackUri,
		UdrRestartInd:              sdmSubscription.UdrRestartInd,
	}
	return Response(http.StatusCreated, createdSubscription), nil

	// TODO - update Subscribe with the required logic for this service method.
	// Add api_subscription_creation_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(201, SdmSubscription{}) or use other options such as http.Ok ...
	// return Response(201, SdmSubscription{}), nil

	// TODO: Uncomment the next line to return response Response(400, ProblemDetails{}) or use other options such as http.Ok ...
	// return Response(400, ProblemDetails{}), nil

	// TODO: Uncomment the next line to return response Response(401, ProblemDetails{}) or use other options such as http.Ok ...
	// return Response(401, ProblemDetails{}), nil

	// TODO: Uncomment the next line to return response Response(403, ProblemDetails{}) or use other options such as http.Ok ...
	// return Response(403, ProblemDetails{}), nil

	// TODO: Uncomment the next line to return response Response(404, ProblemDetails{}) or use other options such as http.Ok ...
	// return Response(404, ProblemDetails{}), nil

	// TODO: Uncomment the next line to return response Response(411, ProblemDetails{}) or use other options such as http.Ok ...
	// return Response(411, ProblemDetails{}), nil

	// TODO: Uncomment the next line to return response Response(413, ProblemDetails{}) or use other options such as http.Ok ...
	// return Response(413, ProblemDetails{}), nil

	// TODO: Uncomment the next line to return response Response(415, ProblemDetails{}) or use other options such as http.Ok ...
	// return Response(415, ProblemDetails{}), nil

	// TODO: Uncomment the next line to return response Response(429, ProblemDetails{}) or use other options such as http.Ok ...
	// return Response(429, ProblemDetails{}), nil

	// TODO: Uncomment the next line to return response Response(500, ProblemDetails{}) or use other options such as http.Ok ...
	// return Response(500, ProblemDetails{}), nil

	// TODO: Uncomment the next line to return response Response(501, ProblemDetails{}) or use other options such as http.Ok ...
	// return Response(501, ProblemDetails{}), nil

	// TODO: Uncomment the next line to return response Response(502, ProblemDetails{}) or use other options such as http.Ok ...
	// return Response(502, ProblemDetails{}), nil

	// TODO: Uncomment the next line to return response Response(503, ProblemDetails{}) or use other options such as http.Ok ...
	// return Response(503, ProblemDetails{}), nil

	// TODO: Uncomment the next line to return response Response(0, {}) or use other options such as http.Ok ...
	// return Response(0, nil),nil

	// return Response(http.StatusNotImplemented, nil), errors.New("Subscribe method not implemented")
}
